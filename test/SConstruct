
import platform, os

env = Environment()
src_cs = Split('TestCS.cc #../src/CircularStrategy.cc')
src_fd = Split('TestFD.cc #../src/FilesDep.cc')

if (platform.system() == "Linux"):
    env.Append(CPPPATH = '../include')
    env.Append(CPPFLAGS = '-Wall -Wextra -ansi -pedantic-errors -Wno-deprecated -O2')
    env.Append(LIBS = Split('boost_unit_test_framework'))

    env_cs = env.Clone()
    env_cs.Program('TestCS', src_cs)

    env_fd = env.Clone()
    env_fd.Append(LIBS = Split('boost_system boost_regex boost_filesystem'))
    env_fd.Program('TestFD', src_fd)
elif (platform.system() == "Windows"):
	env.Append(ENV = {'PATH' : os.environ['PATH']} )
	env.Append(ENV = {'LIB': os.environ['LIB']} )

	env.Append( CPPPATH = [ Dir('../include'), Dir('/Program Files/boost/boost_1_46_1') ] )
	env.Append( LIBPATH = [ Dir('/Program Files/boost/boost_1_46_1/lib') ] )
	env.Append( CPPFLAGS = ' /EHsc /MD /D "WIN32" /D "_CONSOLE" /W4' )

	env_cs = env.Clone()
	env_cs.Program('TestCS', src_cs)

	env_fd = env.Clone()
	env_fd.Program('TestFD', src_fd)
else:
	print platform.system() + " not supported"

